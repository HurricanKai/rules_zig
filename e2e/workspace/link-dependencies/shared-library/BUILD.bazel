load("@bazel_skylib//lib:selects.bzl", "selects")
load("@bazel_skylib//rules:build_test.bzl", "build_test")
load("@bazel_skylib//rules:diff_test.bzl", "diff_test")
load("@rules_zig//zig:defs.bzl", "zig_binary", "zig_library", "zig_test")

selects.config_setting_group(
    name = "macos-zig-0.12.0",
    match_all = [
        "@platforms//os:macos",
        "@zig_toolchains//:0.12.0",
    ],
)

cc_binary(
    name = "add",
    srcs = ["add.c"],
    linkopts = select({
        "@platforms//os:linux": ["-Wl,-soname,libadd.so"],
        "@platforms//os:macos": ["-Wl,-install_name,@rpath/libadd.dylib"],
        "//conditions:default": [],
    }),
    linkshared = True,
)

cc_library(
    name = "add_shared",
    srcs = [":add"],
)

zig_binary(
    name = "binary",
    cdeps = [
        ":add_shared",
        "@rules_zig//zig/lib:libc",
    ],
    main = "main.zig",
)

zig_library(
    name = "library",
    cdeps = [
        ":add_shared",
        "@rules_zig//zig/lib:libc",
    ],
    main = "main.zig",
    target_compatible_with = select({
        ":macos-zig-0.12.0": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
)

zig_test(
    name = "test",
    size = "small",
    cdeps = [
        ":add_shared",
        "@rules_zig//zig/lib:libc",
    ],
    main = "main.zig",
)

build_test(
    name = "build-binary",
    size = "small",
    targets = [
        ":binary",
    ],
)

build_test(
    name = "build-library",
    size = "small",
    targets = [
        ":library",
    ],
)

build_test(
    name = "build-test",
    size = "small",
    targets = [
        ":test",
    ],
)

genrule(
    name = "output",
    outs = ["output.actual"],
    cmd = "$(execpath :binary) > $(OUTS)",
    tools = [":binary"],
)

diff_test(
    name = "output_test",
    size = "small",
    file1 = ":output.expected",
    file2 = ":output.actual",
)
