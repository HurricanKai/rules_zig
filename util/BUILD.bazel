load("@bazel_gazelle//:def.bzl", "gazelle", "gazelle_binary")
load("@buildifier_prebuilt//:rules.bzl", "buildifier", "buildifier_test")
load("@rules_multirun//:defs.bzl", "multirun")

buildifier(
    name = "buildifier.fix",
    diff_command = "diff",
    exclude_patterns = ["./.git/*"],
    lint_mode = "fix",
    mode = "fix",
)

buildifier_test(
    name = "buildifier.check",
    size = "small",
    diff_command = "diff",
    exclude_patterns = ["./.git/*"],
    lint_mode = "warn",
    mode = "diff",
    no_sandbox = True,
    workspace = "//:WORKSPACE",
)

multirun(
    name = "update",
    commands = [
        ":gazelle",
        ":update_filegroups",
        "@rules_bazel_integration_test//tools:update_deleted_packages",
        ":buildifier.fix",
    ] + select({
        # Keep in sync with //docs:BUILD.bazel.
        "@platforms//os:windows": [],
        "//docs:do_not_build_docs": [],
        "//conditions:default": ["//docs:update-alias"],
    }),
)

gazelle_binary(
    name = "gazelle_bin",
    languages = ["@bazel_skylib_gazelle_plugin//bzl"],
)

gazelle(
    name = "gazelle",
    gazelle = "gazelle_bin",
)

py_binary(
    name = "update_filegroups",
    srcs = ["update_filegroups.py"],
    args = [
        "--buildozer",
        "$(rlocationpath @buildifier_prebuilt//:buildozer)",
    ] + select({
        "@aspect_bazel_lib//lib:bzlmod": ["--enable_bzlmod"],
        "//conditions:default": [],
    }),
    data = ["@buildifier_prebuilt//:buildozer"],
    deps = ["@rules_python//python/runfiles"],
)

py_binary(
    name = "update_zig_versions",
    srcs = ["update_zig_versions.py"],
    args = [
        "--output",
        "$(rootpath //zig/private:versions.bzl)",
    ],
    data = ["//zig/private:versions.bzl"],
)
