load("//zig:defs.bzl", "zig_test")
load("//zig/private:versions.bzl", "TOOL_VERSIONS")
load("@bazel_binaries//:defs.bzl", "bazel_binaries")
load(
    "@rules_bazel_integration_test//bazel_integration_test:defs.bzl",
    "bazel_integration_test",
    "bazel_integration_tests",
    "integration_test_utils",
)

# gazelle:exclude workspace

zig_test(
    name = "integration_tests_runner",
    srcs = ["integration_testing.zig"],
    main = "integration_tests_runner.zig",
    tags = ["manual"],
)

bazel_integration_tests(
    name = "workspace_test",
    size = "medium",
    bazel_versions = bazel_binaries.versions.all,
    tags = ["requires-network"] + integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS,
    test_runner = ":integration_tests_runner",
    workspace_files = integration_test_utils.glob_workspace_files("workspace") + [
        "//:all_files",
    ],
    workspace_path = "workspace",
)

bazel_integration_tests(
    name = "bzlmod_test",
    size = "medium",
    bazel_versions = bazel_binaries.versions.all,
    env = {"BZLMOD_ENABLED": "true"},
    tags = ["requires-network"] + integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS,
    test_runner = ":integration_tests_runner",
    workspace_files = integration_test_utils.glob_workspace_files("workspace") + [
        "//:all_files",
    ],
    workspace_path = "workspace",
)

zig_test(
    name = "zig_version_tests_runner",
    srcs = ["integration_testing.zig"],
    main = "zig_version_tests_runner.zig",
    tags = ["manual"],
)

zig_version_tests = {
    "zig_version_test_" + zig_version: bazel_integration_test(
        name = "zig_version_test_" + zig_version,
        size = "small",
        bazel_version = bazel_binaries.versions.current,
        env = {"ZIG_VERSION": zig_version},
        tags = ["requires-network"] + integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS,
        test_runner = ":zig_version_tests_runner",
        workspace_files = integration_test_utils.glob_workspace_files("workspace") + [
            "//:all_files",
        ],
        workspace_path = "workspace",
    )
    for zig_version in TOOL_VERSIONS.keys()
}.keys()

test_suite(
    name = "integration_tests",
    tags = integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS,
    tests = integration_test_utils.bazel_integration_test_names(
        "workspace_test",
        bazel_binaries.versions.all,
    ) + [integration_test_utils.bazel_integration_test_name(
        "bzlmod_test",
        bazel_binaries.versions.current,
    )] + zig_version_tests,
)
